[{"url":"./","title":"TotsuBook 日本語","level":"1.1","keywords":[],"body":"TotsuBook 日本語 "},{"url":"conic_lp.html","title":"錐線形計画問題","level":"2.1","keywords":[],"body":"錐線形計画問題 錐線形計画問題は、凸最適化問題のうち錐最適化問題に属するクラスの問題である。 一見線形計画とあるので扱える問題が狭そうに思えるが、実際は典型的な非線形計画問題を含んでいる： 凸最適化問題 ⊃\\supset⊃ 錐最適化問題 ⊃\\supset⊃ 錐線形計画問題 ⊃\\supset⊃ SDP ⊃\\supset⊃ SOCP ⊃\\supset⊃ QCQP ⊃\\supset⊃ QP ⊃\\supset⊃ LP 上記SDP～QPにおける非線形な目的関数・制約条件は、錐線形計画問題においては凸錐の制約条件によって表される。 錐は以下のように特徴づけられる集合である： ある錐に属する任意の元 xxx と、任意のスカラー λ>0\\lambda>0λ>0 について、λx\\lambda xλx もまたその錐に含まれる。 主問題 minimizecTxsubject toAx⪯Kb \\begin{array}{ll} \\mathrm{minimize} & c^Tx \\\\ \\mathrm{subject\\ to} & Ax \\preceq_\\mathcal{K} b \\end{array} ​minimize​subject to​​​c​T​​x​Ax⪯​K​​b​​ ここで、 変数 x∈Rnx\\in\\mathbb{R}^nx∈R​n​​ c∈Rn, A∈Rm×n, b∈Rmc\\in\\mathbb{R}^n,\\ A\\in\\mathbb{R}^{m\\times n},\\ b\\in\\mathbb{R}^mc∈R​n​​, A∈R​m×n​​, b∈R​m​​ 閉凸錐 K≠∅\\mathcal{K}\\ne\\emptysetK≠∅ とする。 また ⪯K\\preceq_\\mathcal{K}⪯​K​​ の関係は x⪯Ky⟺0⪯Ky−x⟺y−x∈K x\\preceq_\\mathcal{K}y \\Longleftrightarrow 0\\preceq_\\mathcal{K}y-x \\Longleftrightarrow y-x\\in\\mathcal{K} x⪯​K​​y⟺0⪯​K​​y−x⟺y−x∈K であり、スラック変数 s∈Rms\\in\\mathbb{R}^ms∈R​m​​ を導入して主問題は minimizecTxsubject toAx+s=bs∈K \\begin{array}{ll} \\mathrm{minimize} & c^Tx \\\\ \\mathrm{subject\\ to} & Ax + s = b \\\\ & s \\in \\mathcal{K} \\end{array} ​minimize​subject to​​​​c​T​​x​Ax+s=b​s∈K​​ と書くことができる。 双対問題 双対変数あるいはラグランジュ乗数を yyy とし、 ラグランジアン L(x,s;y)=cTx+yT(Ax+s−b) L(x,s;y) = c^Tx + y^T(Ax+s-b) L(x,s;y)=c​T​​x+y​T​​(Ax+s−b) を導入する。 ここで注意として、x,yx,yx,y の定義域はそれぞれ Rn,Rm\\mathbb{R}^n, \\mathbb{R}^mR​n​​,R​m​​ だが、 sss の定義域は K\\mathcal{K}K としている。 ラグランジュ双対をとるために infx,s∈KL\\inf_{x,s\\in\\mathcal{K}} Linf​x,s∈K​​L を評価するにあたり、 L=(c+ATy)Tx+yTs−bTy L = (c + A^Ty)^Tx + y^Ts - b^Ty L=(c+A​T​​y)​T​​x+y​T​​s−b​T​​y から、 c+ATy≠0c + A^Ty \\ne 0c+A​T​​y≠0 のとき、適当な xxx で LLL はいくらでも小さくできる ある y,sy,sy,s で yTs<0y^Ts<0y​T​​s<0 となるとき、 K\\mathcal{K}K は錐なので任意の λ>0\\lambda>0λ>0 に対して λs\\lambda sλs も K\\mathcal{K}K に含まれ、 yTλsy^T\\lambda sy​T​​λs は（よって LLL も）いくらでも小さくできる ことがわかる。 したがって infx,s∈KL>−∞\\inf_{x,s\\in\\mathcal{K}} L > -\\inftyinf​x,s∈K​​L>−∞ のためには c+ATy=0c + A^Ty = 0c+A​T​​y=0 yTs≥0, ∀s∈Ky^Ts \\ge 0,\\ \\forall s\\in\\mathcal{K}y​T​​s≥0, ∀s∈K このような yyy からなる集合は双対錐の定義と一致し、y∈K∗y\\in\\mathcal{K}^*y∈K​∗​​ と書く なお K\\mathcal{K}K は閉集合としたので 0∈K0\\in\\mathcal{K}0∈K、よって yTsy^Tsy​T​​s は必ず 000 を含む となる必要があり、まとめると infx,s∈KL={−bTy(if c+ATy=0, y∈K∗)−∞(otherwise) \\inf_{x,s\\in\\mathcal{K}} L = \\left\\lbrace \\begin{array}{ll} -b^Ty & (\\mathrm{if}\\ c + A^Ty = 0,\\ y\\in\\mathcal{K}^*) \\\\ -\\infty & (\\mathrm{otherwise}) \\end{array} \\right. ​x,s∈K​inf​​L={​−b​T​​y​−∞​​​(if c+A​T​​y=0, y∈K​∗​​)​(otherwise)​​ となる。 結果として g(y)=infx,s∈KLg(y)=\\inf_{x,s\\in\\mathcal{K}} Lg(y)=inf​x,s∈K​​L を最大化するラグランジュ双対問題をとると maximize−bTysubject to−ATy=cy∈K∗ \\begin{array}{ll} \\mathrm{maximize} & -b^Ty \\\\ \\mathrm{subject\\ to} & -A^Ty = c \\\\ & y \\in \\mathcal{K}^* \\end{array} ​maximize​subject to​​​​−b​T​​y​−A​T​​y=c​y∈K​∗​​​​ が得られる。 なお逆に supyL\\sup_{y} Lsup​y​​L（注：yyy の定義域 Rm\\mathbb{R}^mR​m​​ での sup\\supsup）の最小化が主問題に戻ることがわかる。 弱双対性 sss の定義域 K\\mathcal{K}K に注意して L(x,s;y)≥infx,s∈KL=g(y) L(x,s;y) \\ge \\inf_{x,s\\in\\mathcal{K}} L = g(y) L(x,s;y)≥​x,s∈K​inf​​L=g(y) であるから、 x^,s^,y^\\hat x, \\hat s, \\hat y​x​^​​,​s​^​​,​y​^​​ を主問題・双対問題の実行可能解のひとつとすると、 cTx^=L(x^,s^;y^)≥g(y^)=−bTy^ c^T \\hat x = L(\\hat x, \\hat s; \\hat y) \\ge g(\\hat y) = -b^T \\hat y c​T​​​x​^​​=L(​x​^​​,​s​^​​;​y​^​​)≥g(​y​^​​)=−b​T​​​y​^​​ となる。 つまり、実行可能領域において双対問題は主問題の下限を与えている。 さらに最適解 x⋆,s⋆,y⋆x^\\star,s^\\star,y^\\starx​⋆​​,s​⋆​​,y​⋆​​ を代入すれば、最適値を p⋆,d⋆p^\\star,d^\\starp​⋆​​,d​⋆​​ として p⋆=cTx⋆≥−bTy⋆=d⋆ p^\\star = c^T x^\\star \\ge -b^T y^\\star = d^\\star p​⋆​​=c​T​​x​⋆​​≥−b​T​​y​⋆​​=d​⋆​​ が成立する。 強双対性 錐線形計画問題は凸最適化問題の一種であり、制約想定（スレーターの条件など）のもとで強双対性が成立し、 双対ギャップがゼロ、つまり主問題と双対問題の最適値が一致する。 p⋆=d⋆ p^\\star = d^\\star p​⋆​​=d​⋆​​ 参考文献[5]を参照。 最適性条件 強双対性の仮定のもと、 Ax+s=b,s∈K,−ATy=c,y∈K∗,cTx=−bTy Ax + s = b,\\quad s \\in \\mathcal{K},\\quad -A^Ty = c,\\quad y \\in \\mathcal{K}^*,\\quad c^Tx = -b^Ty Ax+s=b,s∈K,−A​T​​y=c,y∈K​∗​​,c​T​​x=−b​T​​y が最適性の必要十分条件（KKT条件、参考文献[5]を参照）となることがわかる。 "},{"url":"selfdual_embed.html","title":"Homogeneous Self-dual Embedding","level":"2.1.1","keywords":[],"body":"Homogeneous Self-dual Embedding 錐線形計画問題の最適性条件を線形方程式系として書くと [0AT0−A0−IcTbT0][xys]+[cb0]=0,s∈K,y∈K∗ \\left[ \\begin{matrix} 0 & A^T & 0 \\\\ -A & 0 & -I \\\\ c^T & b^T & 0 \\end{matrix} \\right] \\left[ \\begin{matrix} x \\\\ y \\\\ s \\end{matrix} \\right] + \\left[ \\begin{matrix} c \\\\ b \\\\ 0 \\end{matrix} \\right] = 0, \\qquad s \\in \\mathcal{K}, \\quad y \\in \\mathcal{K}^* ​⎣​⎡​​​0​−A​c​T​​​​​A​T​​​0​b​T​​​​​0​−I​0​​​⎦​⎤​​​⎣​⎡​​​x​y​s​​​⎦​⎤​​+​⎣​⎡​​​c​b​0​​​⎦​⎤​​=0,s∈K,y∈K​∗​​ となるが、主問題・双対問題が実行可能でない場合には解をもたない。 そこで Homogeneous Self-dual Embedding（参考文献[1]を参照）に倣い、新たな変数 τ,κ\\tau,\\kappaτ,κ を導入して、 [0AT0c−A0−Ib−cT−bT00][xysτ]=[00κ],s∈K,y∈K∗,τ∈R+,κ∈R+ \\left[ \\begin{matrix} 0 & A^T & 0 & c\\\\ -A & 0 & -I & b \\\\ -c^T & -b^T & 0 & 0 \\end{matrix} \\right] \\left[ \\begin{matrix} x \\\\ y \\\\ s \\\\ \\tau \\end{matrix} \\right] = \\left[ \\begin{matrix} 0 \\\\ 0 \\\\ \\kappa \\end{matrix} \\right] , \\qquad s \\in \\mathcal{K}, \\quad y \\in \\mathcal{K}^*, \\quad \\tau \\in \\mathbb{R}_+, \\quad \\kappa \\in \\mathbb{R}_+ ​⎣​⎡​​​0​−A​−c​T​​​​​A​T​​​0​−b​T​​​​​0​−I​0​​​c​b​0​​​⎦​⎤​​​⎣​⎢​⎢​⎡​​​x​y​s​τ​​​⎦​⎥​⎥​⎤​​=​⎣​⎡​​​0​0​κ​​​⎦​⎤​​,s∈K,y∈K​∗​​,τ∈R​+​​,κ∈R​+​​ とおく。 特に τ=1,κ=0\\tau=1,\\kappa=0τ=1,κ=0 の場合は元の線形方程式に戻る。 また −cTx−bTy=κ⟹−τcTx−τbTy=τκ⟹(ATy)Tx−(Ax+s)Ty=τκ⟹−sTy=τκ \\begin{array}{ll} &-c^Tx -b^Ty = \\kappa \\\\ \\Longrightarrow & -\\tau c^Tx -\\tau b^Ty = \\tau\\kappa \\\\ \\Longrightarrow & (A^Ty)^Tx -(Ax+s)^Ty = \\tau\\kappa \\\\ \\Longrightarrow & -s^Ty = \\tau\\kappa \\\\ \\end{array} ​​⟹​⟹​⟹​​​​−c​T​​x−b​T​​y=κ​−τc​T​​x−τb​T​​y=τκ​(A​T​​y)​T​​x−(Ax+s)​T​​y=τκ​−s​T​​y=τκ​​ と計算でき、双対錐の定義から sTy≥0s^Ty\\ge0s​T​​y≥0 なので τκ≤0\\tau\\kappa\\le0τκ≤0 となり、 τ,κ∈R_+\\tau,\\kappa \\in \\mathbb{R}\\_+τ,κ∈R_+ から少なくともいずれかは 000 となる。 τ>0,κ=0\\tau>0,\\kappa=0τ>0,κ=0 の場合 x/τ,y/τ,s/τx/\\tau,y/\\tau,s/\\taux/τ,y/τ,s/τ が最適性条件を満たすことがわかるので、これらは錐線形計画問題（主問題・双対問題）の解となる。 τ=0,κ>0\\tau=0,\\kappa>0τ=0,κ>0 の場合 主問題または双対問題が実行可能解をもたない。 参考文献[1]を参照。 τ=0,κ=0\\tau=0,\\kappa=0τ=0,κ=0 の場合 実行可能解をもたないか、あるいは解について何も言えることがない状況である。 参考文献[1]を参照1。 1. 自明な解（オールゼロ）に向かわないことが証明されている。Totsuでは、Pock/Chambolleの一次法を適用しているが、この場合にも自明な解に向かわないことを示す必要があり、今後の課題のひとつ。 ↩ "},{"url":"separable_problem.html","title":"線形合成項を含み、滑らかでない関数からなる、分離可能な凸最適化問題","level":"2.2","keywords":[],"body":"線形合成項を含み、滑らかでない関数からなる、分離可能な凸最適化問題 主問題 minimizeG(x)+F(Kx) \\begin{array}{ll} \\mathrm{minimize} & G(x) + F(Kx) \\end{array} ​minimize​​​G(x)+F(Kx)​​ を考える。ここで、 変数 x∈Rnx\\in\\mathbb{R}^nx∈R​n​​ K∈Rm×nK\\in\\mathbb{R}^{m\\times n}K∈R​m×n​​ G:Rn→R∪{+∞}, F:Rm→R∪{+∞}G: \\mathbb{R}^n\\to\\mathbb{R}\\cup\\lbrace+\\infty\\rbrace,\\ F: \\mathbb{R}^m\\to\\mathbb{R}\\cup\\lbrace+\\infty\\rbraceG:R​n​​→R∪{+∞}, F:R​m​​→R∪{+∞} は下半連続な凸関数 このとき G∗∗=G, F∗∗=FG^{\\ast\\ast}=G,\\ F^{\\ast\\ast}=FG​∗∗​​=G, F​∗∗​​=F となる ただし h∗(y)=supx(yTx−h(x))h^\\ast(y)=\\sup_x(y^Tx-h(x))h​∗​​(y)=sup​x​​(y​T​​x−h(x)) は hhh の共役関数 である。 F(Kx)F(Kx)F(Kx) という形で線形合成項を含み、G,FG,FG,F は下半連続であれば滑らかである必要はなく、 目的関数が2項の和に分離可能な凸最適化問題である。 双対問題 新たな変数 z∈Rmz\\in\\mathbb{R}^mz∈R​m​​ を介して主問題を minimizeG(x)+F(z)subject toKx=z \\begin{array}{ll} \\mathrm{minimize} & G(x) + F(z) \\\\ \\mathrm{subject\\ to} & Kx = z \\end{array} ​minimize​subject to​​​G(x)+F(z)​Kx=z​​ と書き直し、双対変数あるいはラグランジュ乗数を y∈Rmy\\in\\mathbb{R}^my∈R​m​​ としてラグランジアン L=G(x)+F(z)+yT(Kx−z) L = G(x) + F(z) + y^T(Kx - z) L=G(x)+F(z)+y​T​​(Kx−z) を導入する。 infx,zL=infx(G(x)+yTKx)+infz(F(z)−yTz)=−supx((−KTy)Tx−G(x))−supz(yTz−F(z))=−G∗(−KTy)−F∗(y) \\begin{array}{ll} & \\inf_{x,z} L \\\\ = & \\inf_x(G(x) + y^TKx) + \\inf_z(F(z) - y^Tz) \\\\ = & - \\sup_x((-K^Ty)^Tx - G(x)) - \\sup_z(y^Tz - F(z)) \\\\ = & - G^\\ast(-K^Ty) - F^\\ast(y) \\end{array} ​​=​=​=​​​​x,z​inf​​L​​x​inf​​(G(x)+y​T​​Kx)+​z​inf​​(F(z)−y​T​​z)​−​x​sup​​((−K​T​​y)​T​​x−G(x))−​z​sup​​(y​T​​z−F(z))​−G​∗​​(−K​T​​y)−F​∗​​(y)​​ より、これを最大化する双対問題 maximize−(G∗(−KTy)+F∗(y)) \\begin{array}{ll} \\mathrm{maximize} & -(G^\\ast(-K^Ty) + F^\\ast(y)) \\end{array} ​maximize​​​−(G​∗​​(−K​T​​y)+F​∗​​(y))​​ が得られる。 鞍点問題 なお、Lz=infzLL_z=\\inf_z LL​z​​=inf​z​​L とおくと Lz=(Kx)Ty+G(x)−F∗(y) L_z = (Kx)^Ty + G(x) - F^\\ast(y) L​z​​=(Kx)​T​​y+G(x)−F​∗​​(y) となり、双対問題は maxyinfxLz\\max_y\\inf_xL_zmax​y​​inf​x​​L​z​​ とも書ける。 一方 supyLz=G(x)+supy((Kx)Ty−F∗(y))=G(x)+F∗∗(Kx) \\begin{array}{ll} & \\sup_y L_z \\\\ = & G(x) + \\sup_y((Kx)^Ty - F^\\ast(y)) \\\\ = & G(x) + F^{\\ast\\ast}(Kx) \\end{array} ​​=​=​​​​y​sup​​L​z​​​G(x)+​y​sup​​((Kx)​T​​y−F​∗​​(y))​G(x)+F​∗∗​​(Kx)​​ より、主問題は minxsupyLz\\min_x\\sup_yL_zmin​x​​sup​y​​L​z​​ と表すことができる。 したがって minxmaxy(Kx)Ty+G(x)−F∗(y) \\begin{array}{l} \\min_x \\max_y & (Kx)^Ty + G(x) - F^\\ast(y) \\end{array} ​​x​min​​​y​max​​​​​(Kx)​T​​y+G(x)−F​∗​​(y)​​ は、上記主・双対問題の鞍点問題を定めている。 "},{"url":"pock_chambolle.html","title":"Pock/Chambolleの一次法","level":"2.2.1","keywords":[],"body":"Pock/Chambolleの一次法 先の鞍点問題の数値解法として、 参考文献[1]では以下（を含めた形）のアルゴリズムが提示されている。 xk+1=proxGτ(xk−diag(τ)KTyk)yk+1=proxF∗σ(yk+diag(σ)K(2xk+1−xk)) \\begin{array}{l} x^{k+1}=\\mathbf{prox}^{\\tau}_G(x^k-\\mathbf{diag}(\\tau)K^Ty^k) \\\\ y^{k+1}=\\mathbf{prox}^{\\sigma}_{F^\\ast}(y^k+\\mathbf{diag}(\\sigma)K(2x^{k+1}-x^k)) \\end{array} ​x​k+1​​=prox​G​τ​​(x​k​​−diag(τ)K​T​​y​k​​)​y​k+1​​=prox​F​∗​​​σ​​(y​k​​+diag(σ)K(2x​k+1​​−x​k​​))​​ τ∈R++n, σ∈R++m\\tau\\in\\mathbb{R}^n_{++},\\ \\sigma\\in\\mathbb{R}^m_{++}τ∈R​++​n​​, σ∈R​++​m​​ であり、 diag(τ), diag(σ)\\mathbf{diag}(\\tau),\\ \\mathbf{diag}(\\sigma)diag(τ), diag(σ) はアルゴリズムパラメータであるとともに前処理行列としての役割をもつ。 τj=1∑i=1m∣Ki,j∣(j=1,…,n)σi=1∑j=1n∣Ki,j∣(i=1,…,m) \\begin{array}{ll} \\tau_j=\\frac1{\\sum_{i=1}^m|K_{i,j}|} & \\quad(j=1,\\ldots,n) \\\\ \\sigma_i=\\frac1{\\sum_{j=1}^n|K_{i,j}|} & \\quad(i=1,\\ldots,m) \\end{array} ​τ​j​​=​∑​i=1​m​​∣K​i,j​​∣​​1​​​σ​i​​=​∑​j=1​n​​∣K​i,j​​∣​​1​​​​​(j=1,…,n)​(i=1,…,m)​​ と定めると、このとき ∥diag(σ)12Kdiag(τ)12∥2≤1 \\|\\mathbf{diag}(\\sigma)^{\\frac12} K \\mathbf{diag}(\\tau)^{\\frac12}\\|^2\\le1 ∥diag(σ)​​2​​1​​​​Kdiag(τ)​​2​​1​​​​∥​2​​≤1 （左辺のノルムは作用素ノルム）が成立する1。 また、この不等式が成立するとき上記アルゴリズムが収束する（解が存在すれば）ことが示されている。 proxGτ\\mathbf{prox}^\\tau_Gprox​G​τ​​ は近接作用素であるが、diag(τ)−1\\mathbf{diag}(\\tau)^{-1}diag(τ)​−1​​ によりスケールされた内積に誘導されるノルム ∥x∥diag(τ)−1=⟨x,x⟩diag(τ)−112=(xTdiag(τ)−1x)12\\|x\\|_{\\mathbf{diag}(\\tau)^{-1}}=\\langle x,x\\rangle_{\\mathbf{diag}(\\tau)^{-1}}^{\\frac12}=(x^T\\mathbf{diag}(\\tau)^{-1}x)^{\\frac12}∥x∥​diag(τ)​−1​​​​=⟨x,x⟩​diag(τ)​−1​​​​2​​1​​​​=(x​T​​diag(τ)​−1​​x)​​2​​1​​​​ を用いて定義されている2： proxGτ(x~)=argminx(G(x)+12∥x−x~∥diag(τ)−12) \\mathbf{prox}^\\tau_G(\\tilde x) = \\arg\\min_x \\left( G(x) + \\frac12\\|x-\\tilde x\\|_{\\mathbf{diag}(\\tau)^{-1}}^2 \\right) prox​G​τ​​(​x​~​​)=arg​x​min​​(G(x)+​2​​1​​∥x−​x​~​​∥​diag(τ)​−1​​​2​​) なおMoreau分解により y~=proxFσ(y~)+proxF∗σ(y~) \\tilde y = \\mathbf{prox}^\\sigma_F(\\tilde y) + \\mathbf{prox}^\\sigma_{F^\\ast}(\\tilde y) ​y​~​​=prox​F​σ​​(​y​~​​)+prox​F​∗​​​σ​​(​y​~​​) が成り立つ。 1. Totsuでは、prox\\mathbf{prox}prox の計算を容易にするため τ\\tauτ にグルーピングを施すが、この不等式が成立するようにグルーピングしている。 ↩ 2. Totsuでは、対角要素グルーピングにより、スケールされたノルムを考慮しなくてよい。また G,FG,FG,F を指示関数とするため近接作用素が単に射影となる。 ↩ "},{"url":"combine.html","title":"二手法の組合せ","level":"2.3","keywords":[],"body":"二手法の組合せ Totsuでは、前述した二手法を組み合わせて、錐線形計画問題を解く。 まずHomogeneous Self-dual Embeddingを施した最適性条件を、少し変数名と形を変えて、以下に再掲する： [0AT0c−A0−Ib−cT−bT00][x^y^s^τ^]∈[{0}n{0}mR+],x^∈Rn,y^∈K∗,s^∈K,τ^∈R+ \\left[ \\begin{matrix} 0 & A^T & 0 & c \\\\ -A & 0 & -I & b \\\\ -c^T & -b^T & 0 & 0 \\end{matrix} \\right] \\left[ \\begin{matrix} \\hat x \\\\ \\hat y \\\\ \\hat s \\\\ \\hat \\tau \\end{matrix} \\right] \\in \\left[ \\begin{matrix} \\lbrace0\\rbrace^n \\\\ \\lbrace0\\rbrace^m \\\\ \\mathbb{R}_+ \\end{matrix} \\right] , \\qquad \\hat x \\in \\mathbb{R}^n, \\quad \\hat y \\in \\mathcal{K}^*, \\quad \\hat s \\in \\mathcal{K}, \\quad \\hat \\tau \\in \\mathbb{R}_+ ​⎣​⎡​​​0​−A​−c​T​​​​​A​T​​​0​−b​T​​​​​0​−I​0​​​c​b​0​​​⎦​⎤​​​⎣​⎢​⎢​⎡​​​​x​^​​​​y​^​​​​s​^​​​​τ​^​​​​​⎦​⎥​⎥​⎤​​∈​⎣​⎡​​​{0}​n​​​{0}​m​​​R​+​​​​​⎦​⎤​​,​x​^​​∈R​n​​,​y​^​​∈K​∗​​,​s​^​​∈K,​τ​^​​∈R​+​​ そして K=[0AT0c−A0−Ib−cT−bT00],x=[x^y^s^τ^] K=\\left[ \\begin{matrix} 0 & A^T & 0 & c \\\\ -A & 0 & -I & b \\\\ -c^T & -b^T & 0 & 0 \\end{matrix} \\right], \\qquad x=\\left[ \\begin{matrix} \\hat x \\\\ \\hat y \\\\ \\hat s \\\\ \\hat \\tau \\end{matrix} \\right] K=​⎣​⎡​​​0​−A​−c​T​​​​​A​T​​​0​−b​T​​​​​0​−I​0​​​c​b​0​​​⎦​⎤​​,x=​⎣​⎢​⎢​⎡​​​​x​^​​​​y​^​​​​s​^​​​​τ​^​​​​​⎦​⎥​⎥​⎤​​ とおく。 GGG を x^∈Rn, y^∈K∗, s^∈K, τ^∈R+\\hat x \\in \\mathbb{R}^n,\\ \\hat y \\in \\mathcal{K}^\\ast,\\ \\hat s \\in \\mathcal{K},\\ \\hat \\tau \\in \\mathbb{R}_+​x​^​​∈R​n​​, ​y​^​​∈K​∗​​, ​s​^​​∈K, ​τ​^​​∈R​+​​ の指示関数とする： G(x)=IRn×K∗×K×R+(x)={0(if x∈Rn×K∗×K×R+)+∞(otherwise) G(x)= I_{\\mathbb{R}^n \\times \\mathcal{K}^\\ast \\times \\mathcal{K} \\times \\mathbb{R}_+}(x)= \\left\\lbrace \\begin{array}{ll} 0 & (\\mathrm{if}\\ x \\in \\mathbb{R}^n \\times \\mathcal{K}^\\ast \\times \\mathcal{K} \\times \\mathbb{R}_+) \\\\ +\\infty & (\\mathrm{otherwise}) \\end{array} \\right. G(x)=I​R​n​​×K​∗​​×K×R​+​​​​(x)={​0​+∞​​​(if x∈R​n​​×K​∗​​×K×R​+​​)​(otherwise)​​ 同様に FFF も指示関数 F(y)=I{0}n+m×R+(y)={0(if y∈{0}n+m×R+)+∞(otherwise) F(y)= I_{\\lbrace0\\rbrace^{n+m} \\times \\mathbb{R}_+}(y)= \\left\\lbrace \\begin{array}{ll} 0 & (\\mathrm{if}\\ y \\in \\lbrace0\\rbrace^{n+m} \\times \\mathbb{R}_+) \\\\ +\\infty & (\\mathrm{otherwise}) \\end{array} \\right. F(y)=I​{0}​n+m​​×R​+​​​​(y)={​0​+∞​​​(if y∈{0}​n+m​​×R​+​​)​(otherwise)​​ とすることで、元の式を minimizeG(x)+F(Kx) \\begin{array}{ll} \\mathrm{minimize} & G(x) + F(Kx) \\end{array} ​minimize​​​G(x)+F(Kx)​​ と表すことができる。 これにPock/Chambolleの一次法を適用すればよい。 近接作用素と前処理行列 まず proxF∗σ(y~)=y~−proxFσ(y~)=y~−argminy(F(y)+12∥y−y~∥diag(σ)−12) \\begin{array}{rcl} \\mathbf{prox}^\\sigma_{F^\\ast}(\\tilde y) &=& \\tilde y - \\mathbf{prox}^\\sigma_F(\\tilde y) \\\\ &=& \\tilde y - \\arg\\min_y \\left( F(y) + \\frac12\\|y-\\tilde y\\|_{\\mathbf{diag}(\\sigma)^{-1}}^2 \\right) \\end{array} ​prox​F​∗​​​σ​​(​y​~​​)​​​​=​=​​​​y​~​​−prox​F​σ​​(​y​~​​)​​y​~​​−arg​y​min​​(F(y)+​2​​1​​∥y−​y​~​​∥​diag(σ)​−1​​​2​​)​​ ここで FFF は指示関数なので argmin\\arg\\minargmin はその集合への射影となるが、 一般には diag(σ)−1\\mathbf{diag}(\\sigma)^{-1}diag(σ)​−1​​ によってスケールされた距離にもとづく必要がある。 しかし {0}n+m×R+\\lbrace0\\rbrace^{n+m} \\times \\mathbb{R}_+{0}​n+m​​×R​+​​ への射影は各要素で互いに独立に分解してよく、 結局 σ\\sigmaσ に依存せずに proxF∗σ(y~)=y~−Π{0}n+m×R+(y~)=y~−[{0}n+mmax(y~n+m+1,0)]=[y~1⋮y~n+mmin(y~n+m+1,0)] \\begin{array}{rcl} \\mathbf{prox}^\\sigma_{F^\\ast}(\\tilde y) &=& \\tilde y - \\Pi_{\\lbrace0\\rbrace^{n+m} \\times \\mathbb{R}_+} (\\tilde y) \\\\ &=& \\tilde y - \\left[ \\begin{matrix} \\lbrace0\\rbrace^{n+m} \\\\ \\max(\\tilde y_{n+m+1}, 0) \\end{matrix} \\right] \\\\ &=& \\left[ \\begin{matrix} \\tilde y_1 \\\\ \\vdots \\\\ \\tilde y_{n+m} \\\\ \\min(\\tilde y_{n+m+1}, 0) \\end{matrix} \\right] \\end{array} ​prox​F​∗​​​σ​​(​y​~​​)​​​​​=​=​=​​​​y​~​​−Π​{0}​n+m​​×R​+​​​​(​y​~​​)​​y​~​​−[​{0}​n+m​​​max(​y​~​​​n+m+1​​,0)​​]​​⎣​⎢​⎢​⎡​​​​y​~​​​1​​​⋮​​y​~​​​n+m​​​min(​y​~​​​n+m+1​​,0)​​​⎦​⎥​⎥​⎤​​​​ となる。 次に proxGτ(x~)=argminx(G(x)+12∥x−x~∥diag(τ)−12) \\begin{array}{l} \\mathbf{prox}^\\tau_{G}(\\tilde x) &=& \\arg\\min_x \\left( G(x) + \\frac12\\|x-\\tilde x\\|_{\\mathbf{diag}(\\tau)^{-1}}^2 \\right) \\end{array} ​prox​G​τ​​(​x​~​​)​​​=​​​arg​x​min​​(G(x)+​2​​1​​∥x−​x​~​​∥​diag(τ)​−1​​​2​​)​​ は Rn×K∗×K×R+\\mathbb{R}^n \\times \\mathcal{K}^\\ast \\times \\mathcal{K} \\times \\mathbb{R}_+R​n​​×K​∗​​×K×R​+​​ への射影であり、 Rn\\mathbb{R}^nR​n​​ への射影（これは何もしなくてよいということ）、R+\\mathbb{R}_+R​+​​ への射影はやはり τ\\tauτ に依存せず行うことができる。 また、仮に K=K1×⋯×Kk\\mathcal{K} = \\mathcal{K}_1 \\times \\cdots \\times \\mathcal{K}_kK=K​1​​×⋯×K​k​​ とした場合、 K∗=K1∗×⋯×Kk∗\\mathcal{K}^\\ast = \\mathcal{K}^\\ast_1 \\times \\cdots \\times \\mathcal{K}^\\ast_kK​∗​​=K​1​∗​​×⋯×K​k​∗​​ となり、 各 Ki, Ki∗\\mathcal{K}_i,\\ \\mathcal{K}^\\ast_iK​i​​, K​i​∗​​ への射影どうしは独立している。 しかし Ki, Ki∗\\mathcal{K}_i,\\ \\mathcal{K}^\\ast_iK​i​​, K​i​∗​​ への射影ひとつひとつは一般には τ\\tauτ によるスケーリングに依存してしまう。 ここで、Ki\\mathcal{K}_iK​i​​ に対応する τ\\tauτ の成分グループを τi1,…,τit\\tau_{i1},\\ldots,\\tau_{it}τ​i1​​,…,τ​it​​ と置く。 これらをすべて等しい値 τi=min(τi1,…,τit)\\tau_i=\\min(\\tau_{i1},\\ldots,\\tau_{it})τ​i​​=min(τ​i1​​,…,τ​it​​) に置き換えれば、等方スケールとなるので、 proxGτ¯(x~)=ΠRn×K∗×K×R+(x~) \\mathbf{prox}^{\\bar \\tau}_{G}(\\tilde x) = \\Pi_{\\mathbb{R}^n \\times \\mathcal{K}^\\ast \\times \\mathcal{K} \\times \\mathbb{R}_+} (\\tilde x) prox​G​​τ​¯​​​​(​x​~​​)=Π​R​n​​×K​∗​​×K×R​+​​​​(​x​~​​) と τ¯\\bar \\tau​τ​¯​​ に依存しない形にすることができる （Ki∗\\mathcal{K}^\\ast_iK​i​∗​​ も同様、τ\\tauτ を全体的にグルーピングして置き換えたものを τ¯\\bar \\tau​τ​¯​​ としている）。 なお、上記のグルーピングと置き換えにより ∥diag(σ)12Kdiag(τ¯)12∥2≤∥diag(σ)12Kdiag(τ)12∥2≤1 \\|\\mathbf{diag}(\\sigma)^{\\frac12} K \\mathbf{diag}(\\bar \\tau)^{\\frac12}\\|^2\\le \\|\\mathbf{diag}(\\sigma)^{\\frac12} K \\mathbf{diag}(\\tau)^{\\frac12}\\|^2\\le1 ∥diag(σ)​​2​​1​​​​Kdiag(​τ​¯​​)​​2​​1​​​​∥​2​​≤∥diag(σ)​​2​​1​​​​Kdiag(τ)​​2​​1​​​​∥​2​​≤1 となり、収束条件は変わらず満たされていることを注記しておく。 "},{"url":"init_term_cri.html","title":"初期値と終了基準","level":"2.3.1","keywords":[],"body":"初期値と終了基準 初期値は x0=[x^0y^0s^0τ^0]=[0001],y0=0 x_0= \\left[ \\begin{matrix} \\hat x_0 \\\\ \\hat y_0 \\\\ \\hat s_0 \\\\ \\hat \\tau_0 \\end{matrix} \\right] = \\left[ \\begin{matrix} 0 \\\\ 0 \\\\ 0 \\\\ 1 \\end{matrix} \\right] ,\\qquad y_0=0 x​0​​=​⎣​⎢​⎢​⎡​​​​x​^​​​0​​​​y​^​​​0​​​​s​^​​​0​​​​τ​^​​​0​​​​​⎦​⎥​⎥​⎤​​=​⎣​⎢​⎢​⎡​​​0​0​0​1​​​⎦​⎥​⎥​⎤​​,y​0​​=0 とする。 Pock/Chambolleの一次法の反復において、xkx_kx​k​​ は proxGτ\\mathbf{prox}^\\tau_{G}prox​G​τ​​ による射影の後のため必ず xk∈Rn×K∗×K×R+x_k \\in \\mathbb{R}^n \\times \\mathcal{K}^\\ast \\times \\mathcal{K} \\times \\mathbb{R}_+x​k​​∈R​n​​×K​∗​​×K×R​+​​ となっており、 主・双対の錐の制約条件を満たしている。 この状況のもと、終了基準は参考文献[1]と同等のものを適用する。 τ^k>εzero\\hat \\tau^k > \\varepsilon_\\mathrm{zero}​τ​^​​​k​​>ε​zero​​ の場合 収束判定 ∥Ax^k/τ^k+s^k/τ^k−b∥1+∥b∥≤εacc∧∥ATy^k/τ^k+c∥1+∥c∥≤εacc∧∥cTx^k/τ^k+bTy^k/τ^k∥1+∣cTx^k/τ^k∣+∣bTy^k/τ^k∣≤εacc \\begin{array}{rl} & \\frac{\\|A \\hat x_k / \\hat\\tau_k + \\hat s_k / \\hat\\tau_k - b\\|}{1 + \\|b\\|} \\le \\varepsilon_\\mathrm{acc} \\\\ \\land& \\frac{\\|A^T \\hat y_k / \\hat\\tau_k + c\\|}{1 + \\|c\\|} \\le \\varepsilon_\\mathrm{acc} \\\\ \\land& \\frac{\\|c^T \\hat x_k / \\hat\\tau_k + b^T \\hat y_k / \\hat\\tau_k\\|}{1 + |c^T \\hat x_k / \\hat\\tau_k| + |b^T \\hat y_k / \\hat\\tau_k|} \\le \\varepsilon_\\mathrm{acc} \\end{array} ​​∧​∧​​​​1+∥b∥​​∥A​x​^​​​k​​/​τ​^​​​k​​+​s​^​​​k​​/​τ​^​​​k​​−b∥​​≤ε​acc​​​​1+∥c∥​​∥A​T​​​y​^​​​k​​/​τ​^​​​k​​+c∥​​≤ε​acc​​​​1+∣c​T​​​x​^​​​k​​/​τ​^​​​k​​∣+∣b​T​​​y​^​​​k​​/​τ​^​​​k​​∣​​∥c​T​​​x​^​​​k​​/​τ​^​​​k​​+b​T​​​y​^​​​k​​/​τ​^​​​k​​∥​​≤ε​acc​​​​ を満たすとき、解 x⋆=x^k/τ^k, y⋆=y^k/τ^kx^\\star=\\hat x_k / \\hat\\tau_k,\\ y^\\star=\\hat y_k / \\hat\\tau_kx​⋆​​=​x​^​​​k​​/​τ​^​​​k​​, y​⋆​​=​y​^​​​k​​/​τ​^​​​k​​ に収束したと判定し、終了する。 τ^k≤εzero\\hat \\tau^k \\le \\varepsilon_\\mathrm{zero}​τ​^​​​k​​≤ε​zero​​ の場合 下限なし判定 −cTx^k>εzero∧∥Ax^k+s^k∥∥c∥−cTx^k≤εinf -c^T \\hat x_k > \\varepsilon_\\mathrm{zero} \\quad \\land \\quad \\|A \\hat x_k + \\hat s_k\\|\\frac{\\|c\\|}{-c^T \\hat x_k} \\le \\varepsilon_\\mathrm{inf} −c​T​​​x​^​​​k​​>ε​zero​​∧∥A​x​^​​​k​​+​s​^​​​k​​∥​−c​T​​​x​^​​​k​​​​∥c∥​​≤ε​inf​​ を満たすとき、主問題の下限なし（双対問題の実行可能な解なし）と判定し、終了する。 実行不可能判定 −bTy^k>εzero∧∥ATy^k∥∥b∥−bTy^k≤εinf -b^T \\hat y_k > \\varepsilon_\\mathrm{zero} \\quad \\land \\quad \\|A^T \\hat y_k\\|\\frac{\\|b\\|}{-b^T \\hat y_k} \\le \\varepsilon_\\mathrm{inf} −b​T​​​y​^​​​k​​>ε​zero​​∧∥A​T​​​y​^​​​k​​∥​−b​T​​​y​^​​​k​​​​∥b∥​​≤ε​inf​​ を満たすとき、主問題の実行可能な解なしと判定し、終了する。 "},{"url":"reference.html","title":"参考文献","level":"2.4","keywords":[],"body":"参考文献 T. Pock and A. Chambolle. \"Diagonal preconditioning for first order primal-dual algorithms in convex optimization.\" 2011 International Conference on Computer Vision. IEEE, 2011. B. O’donoghue, et al. \"Conic optimization via operator splitting and homogeneous self-dual embedding.\" Journal of Optimization Theory and Applications 169.3 (2016): 1042-1068. N. Parikh and S. Boyd. \"Proximal algorithms.\" Foundations and Trends in optimization 1.3 (2014): 127-239. Mosek ApS. \"MOSEK modeling cookbook.\" (2020). S. Boyd and L. Vandenberghe. \"Convex Optimization.\" (2004). "}]